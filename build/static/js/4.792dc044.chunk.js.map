{"version":3,"sources":["constants/snippets.js","constants/editor.js","components/TextEditor.js","components/Whiteboard.js","components/ParticipantList.js","components/RoomManager.js","components/NamePrompt.js","pages/RoomPage.js"],"names":["snippets","javascript","python","php","c","java","cpp","supportedLanguages","getLanguageMode","lang","TextEditor","props","text","setText","getOutput","language","output","ipChange","isCompiling","setLanguage","roomName","displayName","setCursor","cursorList","_useState","useState","_useState2","_slicedToArray","markerList","_useState3","_useState4","Output","setOutput","cmRef","useRef","compile","console","log","handleLanguageChange","newLang","createBookmark","cursorPos","color","cursorCoords","current","cursorElement","document","createElement","style","borderLeftStyle","borderLeftWidth","borderLeftColor","height","concat","bottom","top","padding","zIndex","setBookmark","widget","useEffect","length","pop","clear","i","newMarker","push","_jsxs","className","children","_jsx","Button","onClick","alert","el","value","window","location","href","body","appendChild","select","execCommand","removeChild","variant","disabled","Spinner","as","animation","size","role","DropdownButton","title","map","Dropdown","Item","onSelect","eventKey","CodeMirror","onBeforeChange","editor","data","onCursor","editorDidMount","options","lineWrapping","lineNumbers","lint","mode","theme","autoCloseTags","matchBrackets","autoCloseBrackets","smartIndent","colorize","showHint","anyword","foldGutter","gutters","htmlFor","onChange","e","target","id","rows","Whiteboard","canvasRef","contextRef","drawing","setDrawing","isDrawing","colors","setColor","startNewLine","x","y","context","strokeStyle","beginPath","moveTo","draw","lineTo","stroke","clearCanvas","width","clearRect","handleDrawingChange","newDrawing","canvas","pixelRatio","devicePixelRatio","innerWidth","innerHeight","setCanvasProperties","getContext","scale","lineCap","lineWidth","setContextProperties","lastCoordinates","offsetX","offsetY","_canvasRef$current","CirclePicker","onChangeComplete","newColor","hex","_canvasRef$current2","onMouseDown","_e$nativeEvent","nativeEvent","coordinate","onMouseUp","onMouseMove","_e$nativeEvent2","ref","ParticipantList","nameList","index","RoomManager","socketRef","participantListRef","setCursorList","setNameList","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","setIsCompiling","_useState15","_useState16","input","setInput","_useState17","_useState18","tt","seTT","refreshCursorList","newCursorList","key","io","apiURL","on","newList","newNameList","refreshNameList","clientId","newCursorPos","newText","disconnect","axios","post","code","then","responce","scroll","offsetHeight","left","behavior","ip","emit","NamePrompt","setDisplayName","setValue","onSubmit","event","type","RoomPage","state","useLocation","useParams","passedInDisplayName","undefined","status","setStatus","checkRoomName","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","sent","t0","stop","_x","apply","arguments"],"mappings":"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","file":"static/js/4.792dc044.chunk.js","sourcesContent":["export const snippets = {\n  javascript: \"\",\n  python: `\n# Python 3 example\ndef say_hello():\n  print('Hello, World')\n\nfor i in range(5):\n  say_hello()\n`,\n  php: `\n<?php\n\n  // Php example\n  for ( $i = 0; $i < 5; $i++) {\n    echo \"Hello, World\";\n  }\n?>\n`,\n  c: `\n#include <stdio.h>\n\nint main() {\n  for (int i = 0; i < 5; i++) {\n    printf(\"Hello, World\\\\n\");\n  }\n  return 0;\n}\n`,\n  java: `\nimport java.io.*;\nimport java.util.*;\n\nclass Solution {\n  public static void main(String[] args) {\n    ArrayList<String> strings = new ArrayList<String>();\n    strings.add(\"Hello, World!\");\n    strings.add(\"Welcome to CoderPad.\");\n    strings.add(\"This pad is running Java \" + Runtime.version().feature());\n\n    for (String string : strings) {\n      System.out.println(string);\n    }\n  }\n}\n`,\n  cpp: `\n#include <iostream>\nusing namespace std;\n\nint main() {\n  auto words = { \"Hello, \", \"World!\", \"\\\\n\" };\n  for (const string& word : words) {\n    cout << word;\n  }\n  return 0;\n}\n`,\n};\n","export const supportedLanguages = [\"javascript\", \"python\", \"java\", \"c\", \"cpp\"];\n\nexport function getLanguageMode(lang) {\n  switch (lang) {\n    case \"c\":\n      return \"text/x-csrc\";\n    case \"cpp\":\n      return \"text/x-c++src\";\n    case \"java\":\n      return \"text/x-java\";\n    default:\n      return lang;\n  }\n}\n","import React, { useRef, useEffect, useState } from \"react\";\nimport \"codemirror/mode/php/php\";\nimport \"codemirror/mode/clike/clike\";\nimport \"codemirror/mode/python/python\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport \"codemirror/theme/dracula.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport { supportedLanguages, getLanguageMode } from \"../constants/editor\";\nimport apiURL from \"../constants/apiURL\";\nimport { Button, Spinner } from \"react-bootstrap\";\nimport \"../css/Io.css\";\n\n// new addons to codemirror :\nimport \"codemirror/addon/edit/closebrackets\";\nimport \"codemirror/addon/edit/matchbrackets\";\nimport \"codemirror/addon/runmode/colorize\";\nimport \"codemirror/addon/hint/show-hint\";\nimport \"codemirror/addon/hint/anyword-hint\";\nimport \"codemirror/addon/fold/foldcode\";\nimport \"codemirror/addon/fold/foldgutter\";\nimport \"codemirror/addon/fold/brace-fold\";\nimport \"codemirror/addon/fold/comment-fold\";\n\n\n\n\nexport default function TextEditor(props) {\n  const {\n    text,\n    setText,\n    getOutput,\n    language,\n    output,\n    ipChange,\n    isCompiling,\n    setLanguage,\n    displayName,\n    roomName,\n    setCursor,\n    cursorList, // [{cursorPos, color}]\n  } = props;\n\n  const [markerList, setMarkerList] = useState([]);\n  const [Output, setOutput] = useState(\"\");\n  const cmRef = useRef();\n\n  function compile() {\n    getOutput();\n\n    console.log(Output);\n\n    setOutput(output);\n  }\n\n  useEffect(() => {\n    // Clear any bookmarks that are already set\n    while (markerList.length > 0) {\n      const marker = markerList.pop();\n      marker.clear();\n    }\n\n    // Iterate through new list and create bookmarks\n    for (let i = 0; i < cursorList.length; i++) {\n      const newMarker = createBookmark(\n        cursorList[i].cursorPos,\n        cursorList[i].color\n      );\n      markerList.push(newMarker);\n    }\n  }, [cursorList]);\n\n  function handleTextEditorChange(editor, data, value) {\n    setText(value);\n  }\n\n  function handleLanguageChange(newLang) {\n    setLanguage(newLang);\n  }\n\n  function generateLink() {\n    alert(`Invitation link copied to clipboard`);\n    const el = document.createElement(\"input\");\n    el.value = window.location.href;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n  }\n\n  function handleCursorChange(editor, data) {\n    setCursor(data);\n  }\n\n  function createBookmark(cursorPos, color) {\n    const cursorCoords = cmRef.current.cursorCoords(cursorPos);\n    const cursorElement = document.createElement(\"span\");\n    cursorElement.style.borderLeftStyle = \"solid\";\n    cursorElement.style.borderLeftWidth = \"2px\";\n    cursorElement.style.borderLeftColor = color;\n    cursorElement.style.height = `${cursorCoords.bottom - cursorCoords.top}px`;\n    cursorElement.style.padding = 0;\n    cursorElement.style.zIndex = 0;\n\n    const newMarker = cmRef.current.setBookmark(cursorPos, {\n      widget: cursorElement,\n    });\n\n    return newMarker;\n  }\n\n  return (\n    <div className=\"editor-container\">\n      <div className=\"editor-top\">\n        Room : {roomName}\n        <Button onClick={generateLink}> Invite </Button>\n        {isCompiling && (\n          <Button variant=\"primary\" disabled onClick={compile}>\n            <Spinner\n              as=\"span\"\n              animation=\"border\"\n              size=\"sm\"\n              role=\"status\"\n              aria-hidden=\"true\"\n            />\n            <span className=\"visually-hidden\"> Compiling...</span>\n          </Button>\n        )}\n        {!isCompiling && (\n          <Button variant=\"primary\" onClick={compile}>\n            Compile\n          </Button>\n        )}\n        {/* Display Name: {displayName} */}\n        <DropdownButton title={language}>\n          {supportedLanguages.map((lang) => (\n            <Dropdown.Item\n              key={`dropdown-item-${lang}`}\n              onSelect={handleLanguageChange}\n              eventKey={lang}\n            >\n              {lang}\n            </Dropdown.Item>\n          ))}\n        </DropdownButton>\n      </div>\n\n      <CodeMirror\n        className=\"code-mirror-wrapper\"\n        value={text}\n        onBeforeChange={handleTextEditorChange}\n        onCursor={handleCursorChange}\n        editorDidMount={(editor) => (cmRef.current = editor)}\n        options={{\n          lineWrapping: true,\n          lineNumbers: true,\n          lint: true,\n          mode: getLanguageMode(language),\n          theme: \"dracula\",\n\t  autoCloseTags: true,\n          matchBrackets: true,\n          autoCloseBrackets: true,\n          smartIndent: true,\n          colorize: true,\n          showHint: true,\n          anyword: true,\n          foldGutter: true,\n          gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\n          \n          // theme: \"material\",\n        }}\n      />\n      {/* Input , output */}\n      <div className=\"form-group\">\n        <label htmlFor=\"exampleFormControlTextarea1\" className=\"labels\">\n          Input\n        </label>\n        <textarea\n          onChange={(e) => {\n            ipChange(e.target.value);\n          }}\n          className=\"form-control\"\n          id=\"exampleFormControlTextarea1\"\n          rows=\"5\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"exampleFormControlTextarea1\" className=\"labels\">\n          Output\n        </label>\n        <textarea\n          value={output}\n          className=\"form-control\"\n          id=\"exampleFormControlTextarea1\"\n          rows=\"5\"\n        ></textarea>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { CirclePicker } from \"react-color\";\nimport { Button } from \"react-bootstrap\";\n\nexport default function Whiteboard(props) {\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const { drawing, setDrawing } = props;\n  const isDrawing = useRef(false);\n\n  const colors = [\n    \"#0D0D0D\",\n    \"#FF0000\",\n    \"#FFFF00\",\n    \"#00FF00\",\n    \"#FFA500\",\n    \"#23C4ED\",\n  ];\n\n  const [color, setColor] = useState(colors[colors.length - 2]);\n\n  // paint functions :\n\n  function startNewLine(x, y, color, context) {\n    context.strokeStyle = color;\n    context.beginPath();\n    context.moveTo(x, y);\n  }\n\n  // Draws a line to a coordinate\n  function draw(x, y, context) {\n    context.lineTo(x, y);\n    context.stroke();\n  }\n\n  // Clears the canvas and creates a new path for the next line\n  function clearCanvas(width, height, context) {\n    context.clearRect(0, 0, width, height);\n    context.beginPath();\n  }\n\n  useEffect(() => {\n    setCanvasProperties();\n    setContextProperties();\n  }, []);\n\n  useEffect(() => {\n    if (drawing.length === 0) {\n      const { width, height } = canvasRef.current;\n      clearCanvas(width, height, contextRef.current);\n      return;\n    }\n    if (isDrawing.current) return;\n\n    const lastCoordinates = drawing[drawing.length - 1];\n    const { offsetX, offsetY, color } = lastCoordinates;\n\n    const context = contextRef.current;\n    if (color) startNewLine(offsetX, offsetY, color, context);\n    else draw(offsetX, offsetY, context);\n  }, [drawing]);\n\n  function handleDrawingChange(newDrawing) {\n    setDrawing(newDrawing);\n  }\n\n  function handleColorChange(newColor) {\n    setColor(newColor.hex);\n  }\n\n  function handleMouseDown(e) {\n    const { offsetX, offsetY } = e.nativeEvent;\n    startNewLine(offsetX, offsetY, color, contextRef.current);\n    isDrawing.current = true;\n    const coordinate = { offsetX, offsetY, color };\n    const newDrawing = drawing.concat(coordinate);\n    handleDrawingChange(newDrawing);\n  }\n\n  function handleMouseMove(e) {\n    if (!isDrawing.current) return;\n    const { offsetX, offsetY } = e.nativeEvent;\n    draw(offsetX, offsetY, contextRef.current);\n    const coordinate = { offsetX, offsetY };\n    const newDrawing = drawing.concat(coordinate);\n    handleDrawingChange(newDrawing);\n  }\n\n  function handleMouseUp() {\n    isDrawing.current = false;\n  }\n\n  function handleClearWhiteboardClick() {\n    const { width, height } = canvasRef.current;\n    clearCanvas(width, height, contextRef.current);\n    handleDrawingChange([]);\n  }\n\n  function setCanvasProperties() {\n    const canvas = canvasRef.current;\n    const pixelRatio = window.devicePixelRatio || 1;\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight * pixelRatio;\n    canvas.style.width = `${window.innerWidth / pixelRatio}px`;\n    canvas.style.height = `${window.innerHeight}px`;\n  }\n\n  function setContextProperties() {\n    const context = canvasRef.current.getContext(\"2d\");\n    const pixelRatio = window.devicePixelRatio || 1;\n    context.scale(pixelRatio, pixelRatio);\n    context.lineCap = \"round\";\n    context.strokeStyle = colors[colors.length - 2];\n    context.lineWidth = 5;\n    contextRef.current = context;\n  }\n\n  return (\n    <div className=\"whiteboard-container\">\n      <div className=\"whiteboard-top\">\n        <CirclePicker\n          color={color}\n          colors={colors}\n          onChangeComplete={handleColorChange}\n        />\n        <Button onClick={handleClearWhiteboardClick}>Clear </Button>\n      </div>\n\n      <canvas\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n        onMouseMove={handleMouseMove}\n        ref={canvasRef}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function ParticipantList(props) {\n  const { nameList } = props;\n  return (\n    <div>\n      Participants:\n      <ul>\n        {nameList.map((value, index) => (\n          <li\n            key={`${index}-${value.displayName}`}\n            style={{ color: `${value.color}` }}\n          >\n            {value.displayName}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport { snippets } from \"../constants/snippets\";\nimport TextEditor from \"../components/TextEditor\";\nimport Whiteboard from \"../components/Whiteboard\";\nimport ParticipantList from \"../components/ParticipantList\";\nimport apiURL from \"../constants/apiURL\";\n\nexport default function RoomManager(props) {\n  const { roomName, displayName } = props;\n  const socketRef = useRef();\n  const participantListRef = useRef();\n  const [cursorList, setCursorList] = useState([]);\n  const [nameList, setNameList] = useState([]);\n  const [language, setLanguage] = useState(\"javascript\");\n  const [text, setText] = useState(snippets[\"javascript\"]);\n  const [drawing, setDrawing] = useState([]);\n  const [output, setOutPut] = useState([]);\n  const [isCompiling, setIsCompiling] = useState(false);\n\n  const [input, setInput] = useState([]);\n  const [tt, seTT] = useState(\"\");\n\n  useEffect(() => {\n    socketRef.current = io(\n      `${apiURL}?roomName=${roomName}&displayName=${displayName}`\n    );\n\n    // Handle incoming participant list changes\n    socketRef.current.on(\"list change\", (newList) => {\n      participantListRef.current = newList;\n      console.log(\"New list state: \", participantListRef.current);\n      refreshCursorList();\n      refreshNameList();\n    });\n\n    // Handle incoming cursor changes\n    socketRef.current.on(\"cursor change\", (data) => {\n      const targetUser = participantListRef.current[data.clientId];\n      targetUser.cursorPos = data.newCursorPos;\n      refreshCursorList();\n    });\n\n    // Handles incoming text changes\n    socketRef.current.on(\"text change\", (newText) => {\n      setText(newText);\n    });\n\n    // Handles incoming language changes\n    socketRef.current.on(\"language change\", (newLang) => {\n      setLanguage(newLang);\n      setText(text);\n      // setText(snippets[newLang]);\n    });\n\n    // Handles incoming canvas changes\n    socketRef.current.on(\"canvas change\", (newDrawing) => {\n      setDrawing(newDrawing);\n    });\n\n    // When component is deleting, close the existing connection\n    // before exiting\n    return function closeSocket() {\n      console.log(\"Disconnecting now\");\n      socketRef.current.disconnect();\n    };\n  }, [roomName]);\n\n  function handleLocalTextChange(newText) {\n    // Update our changes locally\n    setText(newText);\n\n    // Send to everyone else\n    socketRef.current.emit(\"text change\", newText);\n  }\n\n  function disPlayOutput(answer) {\n    setOutPut(answer);\n  }\n\n  function handleLocalLanguageChange(newLang) {\n    // Update our language locally\n    setLanguage(newLang);\n    setText(text);\n    // Set text to default code of this new lang\n    //setText(snippets[newLang]);\n\n    // Emit language change to everyone else\n    socketRef.current.emit(\"language change\", newLang);\n  }\n\n  function ipChange(ip) {\n    setInput(ip);\n  }\n\n  function handleLocalDrawingChange(newDrawing) {\n    // Update our drawing locally\n    setDrawing(newDrawing);\n    // Emit canvas change to everyone else\n    socketRef.current.emit(\"canvas change\", newDrawing);\n  }\n\n  function handleLocalCursorChange(newCursorPos) {\n    // Update our cursor locally\n    const myObject = participantListRef.current[socketRef.current.id];\n    myObject.cursorPos = newCursorPos;\n\n    // Emit cursor change to everyone else\n    socketRef.current.emit(\"cursor change\", {\n      clientId: socketRef.current.id,\n      newCursorPos: newCursorPos,\n    });\n\n    refreshCursorList();\n  }\n\n  function refreshCursorList() {\n    const newCursorList = [];\n    for (let key in participantListRef.current) {\n      if (key !== socketRef.current.id) {\n        newCursorList.push({\n          cursorPos: participantListRef.current[key].cursorPos,\n          color: participantListRef.current[key].color,\n        });\n      }\n    }\n\n    setCursorList(newCursorList);\n  }\n\n  function refreshNameList() {\n    const newNameList = [];\n    for (let key in participantListRef.current) {\n      newNameList.push({\n        displayName: participantListRef.current[key].displayName,\n        color: participantListRef.current[key].color,\n      });\n    }\n\n    setNameList(newNameList);\n  }\n\n  function getOutput() {\n    setIsCompiling(true);\n\n    axios\n      .post(apiURL + \"/code/run\", {\n        code: text,\n        input: input,\n        id: \"fsf\",\n        lang: language,\n      })\n      .then((responce) => {\n        seTT(responce.data);\n        setIsCompiling(false);\n        window.scroll({\n          top: document.body.offsetHeight,\n          left: 0,\n          behavior: \"smooth\",\n        });\n      })\n      .then(() => {});\n\n    // scrolling :\n  }\n\n  return (\n    <div className=\"app-container\">\n      <TextEditor\n        text={text}\n        getOutput={getOutput}\n        output={tt}\n        ipChange={ipChange}\n        isCompiling={isCompiling}\n        setText={handleLocalTextChange}\n        language={language}\n        setLanguage={handleLocalLanguageChange}\n        displayName={displayName}\n        roomName={roomName}\n        setCursor={handleLocalCursorChange}\n        cursorList={cursorList}\n      />\n\n      {/* <button onClick={getOutput}>compile</button> */}\n\n      <Whiteboard drawing={drawing} setDrawing={handleLocalDrawingChange} />\n\n      <ParticipantList nameList={nameList} />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function NamePrompt(props) {\n  const { setDisplayName } = props;\n  const [value, setValue] = useState(\"\");\n\n  function handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    setDisplayName(value);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Display Name:\n        <input type=\"text\" value={value} onChange={handleChange} />\n      </label>\n    </form>\n  );\n}\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport RoomManager from \"../components/RoomManager\";\nimport NamePrompt from \"../components/NamePrompt\";\nimport apiURL from \"../constants/apiURL\";\n\nexport default function RoomPage() {\n  const { state } = useLocation();\n  const { roomName } = useParams();\n  const passedInDisplayName =\n    state !== undefined ? state.passedInDisplayName : undefined;\n  const [status, setStatus] = useState(\"loading\");\n  const [displayName, setDisplayName] = useState(passedInDisplayName);\n\n  useEffect(() => {\n    const checkRoomName = async (roomName) => {\n      try {\n        const response = await axios.get(`${apiURL}/exists/${roomName}`);\n        if (response.status === 200) {\n          setStatus(\"success\");\n        } else {\n          setStatus(\"error\");\n        }\n      } catch (error) {\n        console.log(\"Error on checkRoomName\", error);\n        setStatus(\"error\");\n      }\n    };\n\n    console.log(\"Checking room name\");\n    checkRoomName(roomName);\n  }, []);\n\n  if (status === \"loading\") {\n    return <span>Loading...</span>;\n  } else if (status === \"error\") {\n    return <span>404 Error: The room {roomName} does not exist</span>;\n  } else if (displayName === \"\" || displayName === undefined) {\n    return <NamePrompt setDisplayName={setDisplayName} />;\n  } else {\n    return <RoomManager roomName={roomName} displayName={displayName} />;\n  }\n}\n"],"sourceRoot":""}