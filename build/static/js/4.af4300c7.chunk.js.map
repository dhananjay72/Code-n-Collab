{"version":3,"sources":["constants/snippets.js","constants/editor.js","components/TextEditor.js","components/Whiteboard.js","components/ParticipantList.js","components/RoomManager.js","components/NamePrompt.js","pages/RoomPage.js"],"names":["snippets","supportedLanguages","getLanguageMode","lang","TextEditor","props","text","setText","getOutput","language","output","ipChange","isCompiling","setLanguage","roomName","displayName","setCursor","cursorList","useState","markerList","Output","setOutput","cmRef","useRef","compile","console","log","handleLanguageChange","newLang","createBookmark","cursorPos","color","cursorCoords","current","cursorElement","document","createElement","style","borderLeftStyle","borderLeftWidth","borderLeftColor","height","bottom","top","padding","zIndex","setBookmark","widget","useEffect","length","pop","clear","i","newMarker","push","className","Button","onClick","alert","el","value","window","location","href","body","appendChild","select","execCommand","removeChild","variant","disabled","Spinner","as","animation","size","role","aria-hidden","DropdownButton","title","map","Dropdown","Item","key","onSelect","eventKey","onBeforeChange","editor","data","onCursor","editorDidMount","options","lineWrapping","lineNumbers","lint","mode","theme","htmlFor","onChange","e","target","id","rows","Whiteboard","canvasRef","contextRef","drawing","setDrawing","isDrawing","colors","setColor","startNewLine","x","y","context","strokeStyle","beginPath","moveTo","draw","lineTo","stroke","clearCanvas","width","clearRect","handleDrawingChange","newDrawing","canvas","pixelRatio","devicePixelRatio","innerWidth","innerHeight","setCanvasProperties","getContext","scale","lineCap","lineWidth","setContextProperties","lastCoordinates","offsetX","offsetY","onChangeComplete","newColor","hex","onMouseDown","nativeEvent","coordinate","concat","onMouseUp","onMouseMove","ref","ParticipantList","nameList","index","RoomManager","socketRef","participantListRef","setCursorList","setNameList","setIsCompiling","input","setInput","tt","seTT","refreshCursorList","newCursorList","io","apiURL","on","newList","newNameList","refreshNameList","clientId","newCursorPos","newText","disconnect","axios","post","code","then","responce","scroll","offsetHeight","left","behavior","ip","emit","NamePrompt","setDisplayName","setValue","onSubmit","event","type","RoomPage","state","useLocation","useParams","passedInDisplayName","undefined","status","setStatus","checkRoomName","a","get"],"mappings":"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","file":"static/js/4.af4300c7.chunk.js","sourcesContent":["export const snippets = {\n  javascript: \"\",\n  python: `\n# Python 3 example\ndef say_hello():\n  print('Hello, World')\n\nfor i in range(5):\n  say_hello()\n`,\n  php: `\n<?php\n\n  // Php example\n  for ( $i = 0; $i < 5; $i++) {\n    echo \"Hello, World\";\n  }\n?>\n`,\n  c: `\n#include <stdio.h>\n\nint main() {\n  for (int i = 0; i < 5; i++) {\n    printf(\"Hello, World\\\\n\");\n  }\n  return 0;\n}\n`,\n  java: `\nimport java.io.*;\nimport java.util.*;\n\nclass Solution {\n  public static void main(String[] args) {\n    ArrayList<String> strings = new ArrayList<String>();\n    strings.add(\"Hello, World!\");\n    strings.add(\"Welcome to CoderPad.\");\n    strings.add(\"This pad is running Java \" + Runtime.version().feature());\n\n    for (String string : strings) {\n      System.out.println(string);\n    }\n  }\n}\n`,\n  cpp: `\n#include <iostream>\nusing namespace std;\n\nint main() {\n  auto words = { \"Hello, \", \"World!\", \"\\\\n\" };\n  for (const string& word : words) {\n    cout << word;\n  }\n  return 0;\n}\n`,\n};\n","export const supportedLanguages = [\"python\", \"java\", \"c\", \"cpp\"];\n\nexport function getLanguageMode(lang) {\n  switch (lang) {\n    case \"c\":\n      return \"text/x-csrc\";\n    case \"cpp\":\n      return \"text/x-c++src\";\n    case \"java\":\n      return \"text/x-java\";\n    default:\n      return lang;\n  }\n}\n","import React, { useRef, useEffect, useState } from \"react\";\nimport \"codemirror/mode/php/php\";\nimport \"codemirror/mode/clike/clike\";\nimport \"codemirror/mode/python/python\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport \"codemirror/theme/dracula.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport { supportedLanguages, getLanguageMode } from \"../constants/editor\";\nimport apiURL from \"../constants/apiURL\";\nimport { Button, Spinner } from \"react-bootstrap\";\nimport \"../css/Io.css\";\n\nexport default function TextEditor(props) {\n  const {\n    text,\n    setText,\n    getOutput,\n    language,\n    output,\n    ipChange,\n    isCompiling,\n    setLanguage,\n    displayName,\n    roomName,\n    setCursor,\n    cursorList, // [{cursorPos, color}]\n  } = props;\n\n  const [markerList, setMarkerList] = useState([]);\n  const [Output, setOutput] = useState(\"\");\n  const cmRef = useRef();\n\n  function compile() {\n    getOutput();\n\n    console.log(Output);\n\n    setOutput(output);\n  }\n\n  useEffect(() => {\n    // Clear any bookmarks that are already set\n    while (markerList.length > 0) {\n      const marker = markerList.pop();\n      marker.clear();\n    }\n\n    // Iterate through new list and create bookmarks\n    for (let i = 0; i < cursorList.length; i++) {\n      const newMarker = createBookmark(\n        cursorList[i].cursorPos,\n        cursorList[i].color\n      );\n      markerList.push(newMarker);\n    }\n  }, [cursorList]);\n\n  function handleTextEditorChange(editor, data, value) {\n    setText(value);\n  }\n\n  function handleLanguageChange(newLang) {\n    setLanguage(newLang);\n  }\n\n  function generateLink() {\n    alert(`Invitation link copied to clipboard`);\n    const el = document.createElement(\"input\");\n    el.value = window.location.href;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n  }\n\n  function handleCursorChange(editor, data) {\n    setCursor(data);\n  }\n\n  function createBookmark(cursorPos, color) {\n    const cursorCoords = cmRef.current.cursorCoords(cursorPos);\n    const cursorElement = document.createElement(\"span\");\n    cursorElement.style.borderLeftStyle = \"solid\";\n    cursorElement.style.borderLeftWidth = \"2px\";\n    cursorElement.style.borderLeftColor = color;\n    cursorElement.style.height = `${cursorCoords.bottom - cursorCoords.top}px`;\n    cursorElement.style.padding = 0;\n    cursorElement.style.zIndex = 0;\n\n    const newMarker = cmRef.current.setBookmark(cursorPos, {\n      widget: cursorElement,\n    });\n\n    return newMarker;\n  }\n\n  return (\n    <div className=\"editor-container\">\n      <div className=\"editor-top\">\n        Room : {roomName}\n        <Button onClick={generateLink}> Invite </Button>\n        {isCompiling && (\n          <Button variant=\"primary\" disabled onClick={compile}>\n            <Spinner\n              as=\"span\"\n              animation=\"border\"\n              size=\"sm\"\n              role=\"status\"\n              aria-hidden=\"true\"\n            />\n            <span className=\"visually-hidden\"> Compiling...</span>\n          </Button>\n        )}\n        {!isCompiling && (\n          <Button variant=\"primary\" onClick={compile}>\n            Compile\n          </Button>\n        )}\n        {/* Display Name: {displayName} */}\n        <DropdownButton title={language}>\n          {supportedLanguages.map((lang) => (\n            <Dropdown.Item\n              key={`dropdown-item-${lang}`}\n              onSelect={handleLanguageChange}\n              eventKey={lang}\n            >\n              {lang}\n            </Dropdown.Item>\n          ))}\n        </DropdownButton>\n      </div>\n\n      <CodeMirror\n        className=\"code-mirror-wrapper\"\n        value={text}\n        onBeforeChange={handleTextEditorChange}\n        onCursor={handleCursorChange}\n        editorDidMount={(editor) => (cmRef.current = editor)}\n        options={{\n          lineWrapping: true,\n          lineNumbers: true,\n          lint: true,\n          mode: getLanguageMode(language),\n          theme: \"dracula\",\n          // theme: \"material\",\n        }}\n      />\n      {/* Input , output */}\n      <div className=\"form-group\">\n        <label htmlFor=\"exampleFormControlTextarea1\" className=\"labels\">\n          Input\n        </label>\n        <textarea\n          onChange={(e) => {\n            ipChange(e.target.value);\n          }}\n          className=\"form-control\"\n          id=\"exampleFormControlTextarea1\"\n          rows=\"5\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"exampleFormControlTextarea1\" className=\"labels\">\n          Output\n        </label>\n        <textarea\n          value={output}\n          className=\"form-control\"\n          id=\"exampleFormControlTextarea1\"\n          rows=\"5\"\n        ></textarea>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { CirclePicker } from \"react-color\";\nimport { Button } from \"react-bootstrap\";\n\nexport default function Whiteboard(props) {\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const { drawing, setDrawing } = props;\n  const isDrawing = useRef(false);\n\n  const colors = [\n    \"#0D0D0D\",\n    \"#FF0000\",\n    \"#FFFF00\",\n    \"#00FF00\",\n    \"#FFA500\",\n    \"#23C4ED\",\n  ];\n\n  const [color, setColor] = useState(colors[colors.length - 2]);\n\n  // paint functions :\n\n  function startNewLine(x, y, color, context) {\n    context.strokeStyle = color;\n    context.beginPath();\n    context.moveTo(x, y);\n  }\n\n  // Draws a line to a coordinate\n  function draw(x, y, context) {\n    context.lineTo(x, y);\n    context.stroke();\n  }\n\n  // Clears the canvas and creates a new path for the next line\n  function clearCanvas(width, height, context) {\n    context.clearRect(0, 0, width, height);\n    context.beginPath();\n  }\n\n  useEffect(() => {\n    setCanvasProperties();\n    setContextProperties();\n  }, []);\n\n  useEffect(() => {\n    if (drawing.length === 0) {\n      const { width, height } = canvasRef.current;\n      clearCanvas(width, height, contextRef.current);\n      return;\n    }\n    if (isDrawing.current) return;\n\n    const lastCoordinates = drawing[drawing.length - 1];\n    const { offsetX, offsetY, color } = lastCoordinates;\n\n    const context = contextRef.current;\n    if (color) startNewLine(offsetX, offsetY, color, context);\n    else draw(offsetX, offsetY, context);\n  }, [drawing]);\n\n  function handleDrawingChange(newDrawing) {\n    setDrawing(newDrawing);\n  }\n\n  function handleColorChange(newColor) {\n    setColor(newColor.hex);\n  }\n\n  function handleMouseDown(e) {\n    const { offsetX, offsetY } = e.nativeEvent;\n    startNewLine(offsetX, offsetY, color, contextRef.current);\n    isDrawing.current = true;\n    const coordinate = { offsetX, offsetY, color };\n    const newDrawing = drawing.concat(coordinate);\n    handleDrawingChange(newDrawing);\n  }\n\n  function handleMouseMove(e) {\n    if (!isDrawing.current) return;\n    const { offsetX, offsetY } = e.nativeEvent;\n    draw(offsetX, offsetY, contextRef.current);\n    const coordinate = { offsetX, offsetY };\n    const newDrawing = drawing.concat(coordinate);\n    handleDrawingChange(newDrawing);\n  }\n\n  function handleMouseUp() {\n    isDrawing.current = false;\n  }\n\n  function handleClearWhiteboardClick() {\n    const { width, height } = canvasRef.current;\n    clearCanvas(width, height, contextRef.current);\n    handleDrawingChange([]);\n  }\n\n  function setCanvasProperties() {\n    const canvas = canvasRef.current;\n    const pixelRatio = window.devicePixelRatio || 1;\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight * pixelRatio;\n    canvas.style.width = `${window.innerWidth / pixelRatio}px`;\n    canvas.style.height = `${window.innerHeight}px`;\n  }\n\n  function setContextProperties() {\n    const context = canvasRef.current.getContext(\"2d\");\n    const pixelRatio = window.devicePixelRatio || 1;\n    context.scale(pixelRatio, pixelRatio);\n    context.lineCap = \"round\";\n    context.strokeStyle = colors[colors.length - 2];\n    context.lineWidth = 5;\n    contextRef.current = context;\n  }\n\n  return (\n    <div className=\"whiteboard-container\">\n      <div className=\"whiteboard-top\">\n        <CirclePicker\n          color={color}\n          colors={colors}\n          onChangeComplete={handleColorChange}\n        />\n        <Button onClick={handleClearWhiteboardClick}>Clear </Button>\n      </div>\n\n      <canvas\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n        onMouseMove={handleMouseMove}\n        ref={canvasRef}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\r\n\r\nexport default function ParticipantList(props) {\r\n  const { nameList } = props;\r\n  return (\r\n    <div>\r\n      Participants:\r\n      <ul>\r\n        {nameList.map((value, index) => (\r\n          <li\r\n            key={`${index}-${value.displayName}`}\r\n            style={{ color: `${value.color}` }}\r\n          >\r\n            {value.displayName}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport { snippets } from \"../constants/snippets\";\nimport TextEditor from \"../components/TextEditor\";\nimport Whiteboard from \"../components/Whiteboard\";\nimport ParticipantList from \"../components/ParticipantList\";\nimport apiURL from \"../constants/apiURL\";\n\nexport default function RoomManager(props) {\n  const { roomName, displayName } = props;\n  const socketRef = useRef();\n  const participantListRef = useRef();\n  const [cursorList, setCursorList] = useState([]);\n  const [nameList, setNameList] = useState([]);\n  const [language, setLanguage] = useState(\"cpp\");\n  const [text, setText] = useState(snippets[\"javascript\"]);\n  const [drawing, setDrawing] = useState([]);\n  const [output, setOutPut] = useState([]);\n  const [isCompiling, setIsCompiling] = useState(false);\n\n  const [input, setInput] = useState([]);\n  const [tt, seTT] = useState(\"\");\n\n  useEffect(() => {\n    socketRef.current = io(\n      `${apiURL}?roomName=${roomName}&displayName=${displayName}`\n    );\n\n    // Handle incoming participant list changes\n    socketRef.current.on(\"list change\", (newList) => {\n      participantListRef.current = newList;\n      console.log(\"New list state: \", participantListRef.current);\n      refreshCursorList();\n      refreshNameList();\n    });\n\n    // Handle incoming cursor changes\n    socketRef.current.on(\"cursor change\", (data) => {\n      const targetUser = participantListRef.current[data.clientId];\n      targetUser.cursorPos = data.newCursorPos;\n      refreshCursorList();\n    });\n\n    // Handles incoming text changes\n    socketRef.current.on(\"text change\", (newText) => {\n      setText(newText);\n    });\n\n    // Handles incoming language changes\n    socketRef.current.on(\"language change\", (newLang) => {\n      setLanguage(newLang);\n      setText(text);\n      // setText(snippets[newLang]);\n    });\n\n    // Handles incoming canvas changes\n    socketRef.current.on(\"canvas change\", (newDrawing) => {\n      setDrawing(newDrawing);\n    });\n\n    // When component is deleting, close the existing connection\n    // before exiting\n    return function closeSocket() {\n      console.log(\"Disconnecting now\");\n      socketRef.current.disconnect();\n    };\n  }, [roomName]);\n\n  function handleLocalTextChange(newText) {\n    // Update our changes locally\n    setText(newText);\n\n    // Send to everyone else\n    socketRef.current.emit(\"text change\", newText);\n  }\n\n  function disPlayOutput(answer) {\n    setOutPut(answer);\n  }\n\n  function handleLocalLanguageChange(newLang) {\n    // Update our language locally\n    setLanguage(newLang);\n    setText(text);\n    // Set text to default code of this new lang\n    //setText(snippets[newLang]);\n\n    // Emit language change to everyone else\n    socketRef.current.emit(\"language change\", newLang);\n  }\n\n  function ipChange(ip) {\n    setInput(ip);\n  }\n\n  function handleLocalDrawingChange(newDrawing) {\n    // Update our drawing locally\n    setDrawing(newDrawing);\n    // Emit canvas change to everyone else\n    socketRef.current.emit(\"canvas change\", newDrawing);\n  }\n\n  function handleLocalCursorChange(newCursorPos) {\n    // Update our cursor locally\n    const myObject = participantListRef.current[socketRef.current.id];\n    myObject.cursorPos = newCursorPos;\n\n    // Emit cursor change to everyone else\n    socketRef.current.emit(\"cursor change\", {\n      clientId: socketRef.current.id,\n      newCursorPos: newCursorPos,\n    });\n\n    refreshCursorList();\n  }\n\n  function refreshCursorList() {\n    const newCursorList = [];\n    for (let key in participantListRef.current) {\n      if (key !== socketRef.current.id) {\n        newCursorList.push({\n          cursorPos: participantListRef.current[key].cursorPos,\n          color: participantListRef.current[key].color,\n        });\n      }\n    }\n\n    setCursorList(newCursorList);\n  }\n\n  function refreshNameList() {\n    const newNameList = [];\n    for (let key in participantListRef.current) {\n      newNameList.push({\n        displayName: participantListRef.current[key].displayName,\n        color: participantListRef.current[key].color,\n      });\n    }\n\n    setNameList(newNameList);\n  }\n\n  // useEffect(() => {\n  //   console.log(\"fuck u\");\n  //   setOutPut(tt);\n  //   console.log(tt);\n  //   console.log(output);\n  // }, [tt]);\n\n  //  need to fix this :\n  //let tt = \"hey\";\n\n  function getOutput() {\n    setIsCompiling(true);\n    // console.log(text);\n    // console.log(language);\n    // let tt = \"\";\n    // var paiza_io = require(\"paiza-io\");\n\n    // if (language === \"python\" || language === \"javascript\") {\n    //   paiza_io(\"python\", text, input, function (error, result) {\n    //     //  setOutPut(result.stdout);\n    //     tt = result.stdout;\n    //     //  disPlayOutput(result.stdout);\n    //     console.log(result.stdout);\n    //     disp(result.stdout);\n    //   });\n    // } else {\n    //   paiza_io(language, [text].join(\"\\n\"), input, function (error, result) {\n    //     if (error) throw error;\n    //     // setOutPut(result.stdout);\n    //     tt = result.stdout;\n    //     console.log(result.stdout);\n    //     disp(result.stdout);\n    //   });\n    // }\n    // console.log(\"fsdfsdf \" + tt);\n\n    // setOutPut(tt);\n    // setOp(tt);\n\n    // axios part :\n    console.log(language);\n    console.log(text);\n\n    axios\n      .post(apiURL + \"/code/run\", {\n        code: text,\n        input: input,\n        id: \"fsf\",\n        lang: language,\n      })\n      .then((responce) => {\n        console.log(responce.data);\n\n        seTT(responce.data);\n        setIsCompiling(false);\n        console.log(tt);\n      })\n      .then(() => {\n        console.log(tt);\n        // setOutPut(tt);\n\n        // setOutPut((prev) => tt);\n        //  console.log(output);\n      });\n\n    // scrolling :\n    window.scroll({\n      top: document.body.offsetHeight,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  }\n\n  return (\n    <div className=\"app-container\">\n      <TextEditor\n        text={text}\n        getOutput={getOutput}\n        output={tt}\n        ipChange={ipChange}\n        isCompiling={isCompiling}\n        setText={handleLocalTextChange}\n        language={language}\n        setLanguage={handleLocalLanguageChange}\n        displayName={displayName}\n        roomName={roomName}\n        setCursor={handleLocalCursorChange}\n        cursorList={cursorList}\n      />\n\n      {/* <button onClick={getOutput}>compile</button> */}\n\n      <Whiteboard drawing={drawing} setDrawing={handleLocalDrawingChange} />\n\n      <ParticipantList nameList={nameList} />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function NamePrompt(props) {\n  const { setDisplayName } = props;\n  const [value, setValue] = useState(\"\");\n\n  function handleChange(event) {\n    setValue(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    setDisplayName(value);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Display Name:\n        <input type=\"text\" value={value} onChange={handleChange} />\n      </label>\n    </form>\n  );\n}\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\nimport RoomManager from \"../components/RoomManager\";\nimport NamePrompt from \"../components/NamePrompt\";\nimport apiURL from \"../constants/apiURL\";\n\nexport default function RoomPage() {\n  const { state } = useLocation();\n  const { roomName } = useParams();\n  const passedInDisplayName =\n    state !== undefined ? state.passedInDisplayName : undefined;\n  const [status, setStatus] = useState(\"loading\");\n  const [displayName, setDisplayName] = useState(passedInDisplayName);\n\n  useEffect(() => {\n    const checkRoomName = async (roomName) => {\n      try {\n        const response = await axios.get(`${apiURL}/exists/${roomName}`);\n        if (response.status === 200) {\n          setStatus(\"success\");\n        } else {\n          setStatus(\"error\");\n        }\n      } catch (error) {\n        console.log(\"Error on checkRoomName\", error);\n        setStatus(\"error\");\n      }\n    };\n\n    console.log(\"Checking room name\");\n    checkRoomName(roomName);\n  }, []);\n\n  if (status === \"loading\") {\n    return <span>Loading...</span>;\n  } else if (status === \"error\") {\n    return <span>404 Error: The room {roomName} does not exist</span>;\n  } else if (displayName === \"\" || displayName === undefined) {\n    return <NamePrompt setDisplayName={setDisplayName} />;\n  } else {\n    return <RoomManager roomName={roomName} displayName={displayName} />;\n  }\n}\n"],"sourceRoot":""}